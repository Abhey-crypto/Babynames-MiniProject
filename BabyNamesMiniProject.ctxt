#BlueJ class context
comment0.target=BabyNamesMiniProject
comment1.params=fr
comment1.target=void\ totalBirths(edu.duke.FileResource)
comment1.text=\r\n\ Modify\ the\ method\ totalBirths\ (shown\ in\ the\ video\ for\ this\ project)\ \r\n\ to\ also\ print\ the\ number\ of\ girls\ names\ ,\ \r\n\ the\ number\ of\ boys\ names\ and\ the\ total\ names\ in\ the\ file.\r\n
comment10.params=
comment10.target=void\ testYearOfHighestRank()
comment11.params=name\ gender
comment11.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment11.text=\r\n\ Write\ the\ method\ getAverageRank\ that\ has\ two\ parameters\:\ a\ string\ name,\ \r\n\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ This\ method\ \r\n\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ a\ double\ representing\ \r\n\ the\ average\ rank\ of\ the\ name\ and\ gender\ over\ the\ selected\ files.\ \r\n\ It\ should\ return\ -1.0\ if\ the\ name\ is\ not\ ranked\ in\ any\ of\ the\ selected\ files.\ \r\n\ For\ example\ calling\ getAverageRank\ with\ name\ Mason\ and\ gender\ \u2018M\u2019\ and\ \r\n\ selecting\ the\ three\ test\ files\ above\ results\ in\ returning\ 3.0,\ \r\n\ as\ he\ is\ rank\ 2\ in\ the\ year\ 2012,\ rank\ 4\ in\ 2013\ and\ rank\ 3\ in\ 2014.\ \ \r\n\ As\ another\ example,\ calling\ \ \ getAverageRank\ with\ name\ Jacob\ and\ \r\n\ gender\ \u2018M\u2019\ and\ selecting\ the\ three\ test\ files\ above\ results\ in\ returning\ 2.66.\r\n
comment12.params=
comment12.target=void\ testGetAverageRank()
comment13.params=year\ name\ gender
comment13.target=int\ getTotalBirthsRankedHigher(int,\ java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Write\ the\ method\ getTotalBirthsRankedHigher\ that\ has\ three\ parameters\:\ \r\n\ an\ integer\ named\ year,\ a\ string\ named\ name,\ and\ a\ string\ named\ gender\ \r\n\ (F\ for\ female\ and\ M\ for\ male).\ This\ method\ returns\ an\ integer,\ \r\n\ the\ total\ number\ of\ births\ of\ those\ names\ with\ the\ same\ gender\ and\ \r\n\ same\ year\ who\ are\ ranked\ higher\ than\ name.\ For\ example,\ if\ \r\n\ getTotalBirthsRankedHigher\ accesses\ the\ "yob2012short.csv"\ file\ with\ \r\n\ name\ set\ to\ \u201CEthan\u201D,\ gender\ set\ to\ \u201CM\u201D,\ and\ year\ set\ to\ 2012,\ then\ this\ \r\n\ method\ should\ return\ 15,\ since\ Jacob\ has\ 8\ births\ and\ Mason\ has\ 7\ births,\ \r\n\ and\ those\ are\ the\ only\ two\ ranked\ higher\ than\ Ethan.\ \r\n
comment14.params=
comment14.target=void\ testGetTotalBirthsRankedHigher()
comment2.params=
comment2.target=void\ testTotalBirths()
comment3.params=year\ name\ gender
comment3.target=int\ getRank(int,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Write\ the\ method\ named\ getRank\ that\ has\ three\ parameters\:\ an\ integer\ named\ year,\ a\ string\ named\ name,\ and\ \r\n\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ This\ method\ returns\ the\ rank\ of\ the\ name\ in\ the\ file\ \r\n\ for\ the\ given\ gender,\ \ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\ If\ the\ name\ is\ not\ in\ \r\n\ the\ file,\ then\ -1\ is\ returned.\ \ For\ example,\ in\ the\ file\ "yob2012short.csv",\ given\ the\ name\ Mason,\ \r\n\ the\ year\ 2012\ and\ the\ gender\ \u2018M\u2019,\ the\ number\ returned\ is\ 2,\ as\ Mason\ is\ the\ boys\ name\ with\ the\ second\ \r\n\ highest\ number\ of\ births.\ Given\ the\ name\ Mason,\ the\ year\ 2012\ and\ the\ gender\ \u2018F\u2019,\ \r\n\ the\ number\ returned\ is\ -1\ as\ Mason\ does\ not\ appear\ with\ an\ F\ in\ that\ file.\r\n
comment4.params=
comment4.target=void\ testGetRank()
comment5.params=year\ rank\ gender
comment5.target=java.lang.String\ getName(int,\ int,\ java.lang.String)
comment5.text=\r\n\ Write\ the\ method\ named\ getName\ that\ has\ three\ parameters\:\ an\ integer\ \r\n\ named\ year,\ an\ integer\ named\ rank,\ and\ a\ string\ named\ gender\ (F\ for\ \r\n\ female\ and\ M\ for\ male).\ This\ method\ returns\ the\ name\ of\ the\ person\ in\ \r\n\ the\ file\ at\ this\ rank,\ for\ the\ given\ gender,\ where\ rank\ 1\ is\ the\ name\ with\ the\ \r\n\ largest\ number\ of\ births.\ If\ the\ rank\ does\ not\ exist\ in\ the\ file,\ then\ \r\n\ \u201CNO\ NAME\u201D\ \ is\ returned.\r\n
comment6.params=
comment6.target=void\ testGetName()
comment7.params=name\ year\ newYear\ gender
comment7.target=void\ whatIsNameInYear(java.lang.String,\ int,\ int,\ java.lang.String)
comment7.text=\r\n\ What\ would\ your\ name\ be\ if\ you\ were\ born\ in\ a\ different\ year?\ Write\ the\ \r\n\ void\ method\ named\ whatIsNameInYear\ that\ has\ four\ parameters\:\ a\ string\ name,\ \r\n\ an\ integer\ named\ year\ representing\ the\ year\ that\ name\ was\ born,\ \ \r\n\ an\ integer\ named\ newYear\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ determines\ what\ name\ would\ have\ been\ named\ if\ they\ were\ born\ in\ a\ \r\n\ different\ year,\ based\ on\ the\ same\ popularity.\ That\ is,\ you\ should\ determine\ \r\n\ the\ rank\ of\ name\ in\ the\ year\ they\ were\ born,\ and\ then\ print\ the\ name\ born\ in\ newYear\ \r\n\ that\ is\ at\ the\ same\ rank\ and\ same\ gender.\ For\ example,\ using\ the\ files\ "yob2012short.csv"\ \r\n\ and\ "yob2014short.csv",\ notice\ that\ in\ 2012\ Isabella\ is\ the\ third\ most\ popular\ girl's\ name.\ \r\n\ If\ Isabella\ was\ born\ in\ 2014\ instead,\ she\ would\ have\ been\ named\ Sophia,\ \r\n\ the\ third\ most\ popular\ girl's\ name\ that\ year.\r\n
comment8.params=
comment8.target=void\ testWhatIsNameInYear()
comment9.params=name\ gender
comment9.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Write\ the\ method\ yearOfHighestRank\ that\ has\ two\ parameters\:\ a\ string\ \r\n\ name,\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ This\ \r\n\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ an\ integer,\ the\ year\ \r\n\ with\ the\ highest\ rank\ for\ the\ name\ and\ gender.\ If\ the\ name\ and\ gender\ are\ \r\n\ not\ in\ any\ of\ the\ selected\ files,\ it\ should\ return\ -1.\ For\ example,\ calling\ \r\n\ yearOfHighestRank\ with\ name\ Mason\ and\ gender\ \u2018M\u2019\ and\ selecting\ the\ \r\n\ three\ test\ files\ above\ results\ in\ returning\ the\ year\ 2012.\ That\ is\ because\ \r\n\ Mason\ was\ ranked\ the\ \ 2nd\ most\ popular\ name\ in\ 2012,\ ranked\ 4th\ in\ 2013\ and\ \r\n\ ranked\ 3rd\ in\ 2014.\ His\ highest\ ranking\ was\ in\ 2012.\r\n
numComments=15
